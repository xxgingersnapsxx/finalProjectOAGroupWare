package kr.or.gw.controller;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.gw.command.DbxModifyCommand;
import kr.or.gw.command.DbxRegistCommand;
import kr.or.gw.command.SearchCriteria;
import kr.or.gw.command.TreeEmpCriteria;
import kr.or.gw.command.basicCriteria;
import kr.or.gw.dto.DbxVO;
import kr.or.gw.dto.OrgnztEmpMngtVO;
import kr.or.gw.service.DbxService;
import kr.or.gw.service.TreeEmpService;

@Controller
@RequestMapping("/document/individual")
public class DbxIndiController {
	
	@Autowired
	private DbxService dbxService;
	
	@Autowired
	private TreeEmpService treeEmpservice;
	
	@RequestMapping("")
	public ModelAndView list(SearchCriteria cri, ModelAndView mnv)throws SQLException{
		String url="document/individual/list";		
		
		Map<String,Object> dataMap = dbxService.getDbxIndiList(cri);
		
		mnv.addAllObjects(dataMap);
		mnv.setViewName(url);
		
		return mnv;
	}
	
	@RequestMapping(value = "/registForm.do", method = RequestMethod.GET)
	public void loginForm() {
	}
	
	@RequestMapping("/regist")
	public String regist(DbxRegistCommand regReq, 
							HttpServletRequest request,
							RedirectAttributes rttr)throws Exception{
		String url="redirect:/document/individual/list.do";
		
		DbxVO dbx=regReq.toDbxVO();
		
		dbx.setSj((String)request.getAttribute("XSSsj"));
		dbxService.regist(dbx);
		
		rttr.addFlashAttribute("from","regist");
		
		return url;
	}
	
   @RequestMapping("/detail")
   public ModelAndView detail(String dbx_no, ModelAndView mnv )throws SQLException{
      String url="document/individual/detail";      
      
      DbxVO dbx=dbxService.getDbx(dbx_no);
      url="redirect:/document/detail.do?dbx_no="+dbx_no;
               
      mnv.addObject("dbx",dbx);      
      mnv.setViewName(url);
      
      return mnv;
   }
	
	@RequestMapping("/modifyForm")
	public ModelAndView modifyForm(String dbx_no,ModelAndView mnv)throws SQLException{
		String url="document/individual/modify";
		
		DbxVO dbx = dbxService.getDbx(dbx_no);
		
		mnv.addObject("dbx",dbx);		
		mnv.setViewName(url);
		
		return mnv;
	}
	

	@RequestMapping(value="/modify",method=RequestMethod.POST)
	public String modifyPost(DbxModifyCommand modifyReq,
								HttpServletRequest request,
			 					RedirectAttributes rttr) throws Exception{
		
		String url = "redirect:/document/individual/detail.do";
		
		DbxVO dbx = modifyReq.toDbxVO();
		dbx.setSj((String)request.getAttribute("XSStitle"));
		
		dbxService.modify(dbx);
		
		rttr.addAttribute("dbx_no",dbx.getDbx_no());
		rttr.addFlashAttribute("from","modify");
		
		return url;
	}
	
	@RequestMapping(value="/remove",method=RequestMethod.POST)
	public String remove(String dbx_no, RedirectAttributes rttr) throws Exception{
		String url = "redirect:/document/individual/detail.do";
		
		dbxService.remove(dbx_no);
		
		rttr.addAttribute("dbx_no",dbx_no);
		rttr.addFlashAttribute("from","remove");
		return url;
	}


	@RequestMapping("/shareForm")
	public ModelAndView shareForm(SearchCriteria cri, ModelAndView mnv) throws SQLException{
		TreeEmpCriteria empCri = new TreeEmpCriteria();
		List<OrgnztEmpMngtVO> empList = treeEmpservice.getEmpListnopg(empCri);
		
		String url = "document/individual/share";
		Map<String, Object> dataMap = dbxService.getDbxIndiList(cri);
		
		mnv.addObject("empList",empList);
		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);
		return mnv;
	}
	
	@RequestMapping(value="/public/modalDoc", method=RequestMethod.POST)
	@ResponseBody
	public ResponseEntity<List<DbxVO>> modalDocForm(
					@RequestParam(value="docList[]") List<String> docList) throws Exception {
		
		ResponseEntity<List<DbxVO>> entity = null;

		List<DbxVO> dblist = new ArrayList<>(); 

		
		System.out.println("============================================");
		for (String dbx_no : docList) {
			System.out.println(dbx_no);
			
			DbxVO put = dbxService.getDbx(dbx_no);
			dblist.add(put);
		}
		
		entity = new ResponseEntity<List<DbxVO>>(dblist, HttpStatus.OK);
		
		return entity;
	}

}
